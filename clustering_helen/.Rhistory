fviz_cluster(pam.res)
# compute hierarchical clustering
res.hc <- USArrests %>%
scale() %>% # scale the data
dist(method = "euclidean") %>% # compoute dissimilarity matrix
hclust(method = "ward.D2") # compute hierarchical clustering
# visualise using factoextra
# cut in 4 groups and colour by groups
fviz_dend(res.hc, k = 4, # cut in 4 groups
cex = 0.5, # label size
k_colors = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
color_labels_by_k = TRUE, # colour labels by groups
rect = TRUE # add rectangle around groups
)
# assess clustering tendency
gradient.color <- list(low = "steelblue",  high = "white")
iris[, -5] %>%    # Remove column 5 (Species)
scale() %>%     # Scale variables
get_clust_tendency(n = 50, gradient = gradient.color)
# determining the optimal number of clusters
install.packages("NbClust")
# compute
library("NbClust")
res.nbclust <- USArrests %>%
scale() %>%
NbClust(distance = "euclidean",
min.nc = 2, max.nc = 10,
method = "complete", index = "all")
# VISUALISE
fviz_nbclust(res.nbclust, ggtheme = theme_minimal())
set.seed(123)
# enhanced hierarchical clustering cut in 3 groups
res.hc <- iris[, -5] %>%
scale() %>%
eclust("hclust",k = 3, graph = FALSE)
# Visualise with factoextra
fviz_dend(res.hc, palette = "jco", rect = TRUE, show_labels = FALSE)
fviz_silhouette(res.hc)
# silhouette width of observations
sil <- res.hc$silinfo$widths[, 1:3]
# objects with negative silhouette
neg_sil_index <- which(sil[, 'sil_width'] <0)
sil[neg_sil_index, , drop = FALSE]
library(tidyverse)
library(cluster)
library(Rtsne)
library(janitor)
data <- readRDS("./outputs/alldata.rds")
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(~/s_detail_extract_3.csv)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(~/s_detail_extract_3.csv, header = TRUE)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(~s_detail_extract_3.csv, header = TRUE)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(./s_detail_extract_3.csv, header = TRUE)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(s_detail_extract_3.csv, header = TRUE)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv(s_detail_extract_3.csv, header = TRUE)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv("s_detail_extract_3.csv", header = TRUE)
head(data, n = 3)
clusterdata <- data %>%
filter(grepl("^A", `Match Code`)) %>%
filter(risky == "Risky") %>%
select(IMDdecile, MedicalDeclarationReceived, ayear, status) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(declared))
clusterdata <- data %>%
select(IMDdecile, MedicalDeclarationReceived, ayear, status) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(declared))
clusterdata <- data %>%
select(IMDdecile, MedicalDeclarationReceived, ayear, status) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(MedicalDeclarationReceived))
gower_dist <- daisy(clusterdata[,5:12])
gower_dist <- daisy(clusterdata[,3:4])
gower_mat <- as.matrix(gower_dist)
clusterdata[
which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
clusterdata[
which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
sil_width <- c(NA)
for(i in 3:10){
pam_fit <- pam(gower_dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
plot(sil_width)
pam_fit <- pam(gower_dist, diss = TRUE, k = 3)
pam_results <- clusterdata %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
clusterdata[pam_fit$medoids, ]
addclusters <- bind_cols(clusterdata, cluster = pam_fit$clustering)
addclusters %>%
filter(cluster == 3) %>%
tabyl(sic07) %>% as_tibble() %>% arrange(desc(percent))
addclusters %>%
filter(cluster == 3) %>%
tabyl(IMDdecile) %>% as_tibble() %>% arrange(desc(percent))
tsne_obj <- Rtsne(gower_dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv("student_detail.csv", header = TRUE)
head(data, n = 3)
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv("student_detail.csv", header = TRUE)
head(data, n = 3)
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(StudentID,
AcademicYearID,
RefNo,
DOB,
Sex,
Ethnicity,
Country,
LocalDestination,
LearnerSupportReason1,
PriorAttainmentLevel,
HeardAboutCollege,
IsAimHigher,
IsWheelchairUser,
ALSRequired,
HasPEP,
MedicalDeclarationReceived,
MedicalConditionIdentified,
LearnerSupportType1,
IsMatureStudent,
HEQualsOnEntry,
Safeguarding,
TutorGroup,
CriminalConviction,
Student,
FirstLanguage,
LearnerStatus,
HasEducationHealthCarePlan,
PriorAttainmentLevelInYear,
LookedAfter,
CareLeaver,
HighNeedsStudent,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
HouseholdSituation1,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(MedicalDeclarationReceived))
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(StudentID,
AcademicYearID,
RefNo,
DOB,
Sex,
Ethnicity,
Country,
LocalDestination,
LearnerSupportReason1,
PriorAttainmentLevel,
HeardAboutCollege,
IsAimHigher,
IsWheelchairUser,
ALSRequired,
HasPEP,
MedicalDeclarationReceived,
MedicalConditionIdentified,
LearnerSupportType1,
IsMatureStudent,
HEQualsOnEntry,
Safeguarding,
TutorGroup,
CriminalConviction,
StudentFirstLanguage,
LearnerStatus,
HasEducationHealthCarePlan,
PriorAttainmentLevelInYear,
LookedAfter,
CareLeaver,
HighNeedsStudent,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
HouseholdSituation1,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(MedicalDeclarationReceived))
gower_dist <- daisy(clusterdata[,3:4])
gower_dist <- daisy(clusterdata[,3:12])
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(Sex,
Ethnicity,
Country,
LearnerSupportReason1,
IsWheelchairUser,
MedicalConditionIdentified,
IsMatureStudent,
TutorGroup,
LearnerStatus,
HasEducationHealthCarePlan,
LookedAfter,
CareLeaver,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(MedicalDeclarationReceived = as.factor(MedicalDeclarationReceived))
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(Sex,
Ethnicity,
Country,
LearnerSupportReason1,
IsWheelchairUser,
MedicalConditionIdentified,
IsMatureStudent,
TutorGroup,
LearnerStatus,
HasEducationHealthCarePlan,
LookedAfter,
CareLeaver,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(LearnerStatus = as.factor(LearnerStatus))
gower_dist <- daisy(clusterdata[,3:12])
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(Sex,
LearnerSupportReason1,
IsWheelchairUser,
LearnerStatus,
LookedAfter,
CareLeaver,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(LearnerStatus = as.factor(LearnerStatus))
gower_dist <- daisy(clusterdata[,3:12])
gower_dist <- daisy(clusterdata[,3:9])
gower_dist <- daisy(clusterdata[,3:8])
gower_dist <- daisy(clusterdata[,3:7])
gower_dist <- daisy(clusterdata[,4:7])
gower_dist <- daisy(clusterdata[,4:5])
gower_mat <- as.matrix(gower_dist)
clusterdata[
which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv("student_detail.csv", header = TRUE)
head(data, n = 3)
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(Sex,
LearnerSupportReason1,
IsWheelchairUser,
LearnerStatus,
LookedAfter,
CareLeaver,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(LearnerStatus = as.factor(LearnerStatus))
gower_dist <- daisy(clusterdata[,4:5])
gower_dist <- daisy(clusterdata[,1:2])
#data <- readRDS("./outputs/alldata.rds")
data <- read.csv("student_detail_small.csv", header = TRUE)
head(data, n = 3)
# filter only good matches and only non-compliant establishments
# select relevant variables
clusterdata <- data %>%
select(Sex,
LearnerSupportReason1,
IsWheelchairUser,
LearnerStatus,
LookedAfter,
CareLeaver,
YoungParent,
YoungCarer,
HasSpecialEducationNeeds,
LearningDiffOrDis) %>%
drop_na() %>%
mutate(LearnerStatus = as.factor(LearnerStatus))
gower_dist <- daisy(clusterdata[,1:2])
gower_dist <- daisy(clusterdata[,3:8])
gower_mat <- as.matrix(gower_dist)
clusterdata[
which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
clusterdata[
which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
sil_width <- c(NA)
for(i in 3:10){
pam_fit <- pam(gower_dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
plot(sil_width)
data <- "pop_sk.csv"
ls
names(data)
dim(data)]
dim(data)
mydata <- pop_sk.csv
data
data.frame
mydata <- "pop_sk.csv"
mydata.frame
mydata.ls
names(mydata)
mydata <- "pop_sk.csv"
names(mydata)
dim(mydata)
mydata <- read.csv("pop_sk.csv", header = TRUE)
mydata <- read.csv("~\R projects\cike\pop_sk.csv", header = TRUE)
mydata <- read.csv("~/R projects/cike/pop_sk.csv", header = TRUE)
names(mydata)
dim(mydata)
class(mydata)
head(mydata, n=10)
sapply(mydata, mean, na.rm=TRUE)
summary(mydata)
fivenum(mydata)
fivenum(mydata, X2013)
fivenum(mydata, 2)
fivenum(mydata, [2])
x <- mydata[X2013]
x <- mydata[2]
x
fivenum(x)
fivenum(x, na.rm=TRUE)
mydata <- read.csv("~/R projects/cike/pop_sk.csv", header = TRUE)
names(mydata)
dim(mydata)
class(mydata)
head(mydata, n=10)
summary(mydata)
sapply(mydata, mean, na.rm=TRUE)
mydata <- read.csv("~\R projects\cike\pop_sk.csv", header = TRUE)
mydata <- read.csv("~/R projects/cike/pop_sk.csv", header = TRUE)
mydata
names(mydata)
dim(mydata)
class(mydata)
head(mydata, n=5)
summary(mydata)
sapply(mydata, mean, na.rm=TRUE)
barplot(height=mydata.X1966, names=mydata.Age)
barplot(height=mydata.X1996, names=mydata.Age)
barplot(height=mydata.1996, names=mydata.Age)
barplot(height=mydata.[1996], names=mydata.[Age])
barplot(height=mydata[1996], names=mydata[Age])
barplot(height=mydata$1996, names=mydata$Age)
barplot(height=mydata$X1996, names=mydata$Age)
mydata = mydata[-1,]
mydata
mydata(head, n=5)
head(mydata, n=5)
summary(mydata)
barplot(height=mydata$X1996, names=mydata$Age)
barplot(height=mydata$X2008, names=mydata$Age)
barplot(height=mydata$X2018, names=mydata$Age)
library(ggplot2)
boxdata <- read.csv("~/R projects/cike/pop_sk2.csv", header = TRUE)
boxdata
ggplot(boxdata, aes(x=Year, y=Value)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Year")
ggplot(boxdata, aes(x=as.factor(Year), y=Value)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Year")
ggplot(data=boxdata, aes(x=Age,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
ggplot(boxdata, aes(x=as.factor(Year), y=Value)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Year")
mydata <- read.csv("~/R projects/cike/pop_sk.csv", header = TRUE)
mydata
names(mydata)
dim(mydata)
class(mydata)
head(mydata, 5)
summary(mydata)
barplot(height=mydata$X1996, names=mydata$Age)
mydata = mydata[-1,]
barplot(height=mydata$X1996, names=mydata$Age)
library(ggplot2)
mydata <- read.csv("~/R projects/cike/pop_sk2.csv", header = TRUE)
mydata
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
geom_text(show.legend = FALSE)
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
geom_text(show.legend = FALSE)
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
theme(legend.position="none")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="fill", stat="identity") +
theme(legend.position="none")
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
mydata
dim(mydata)
summary(mydata)
summary(mydata$Value)
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
+     geom_bar(position="stack", stat="identity") +
+     theme(legend.position="none")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
theme(legend.position="none")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="fill", stat="identity") +
theme(legend.position="none")
ggplot(data=boxdata, aes(x=Age,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
ggplot(data=mydata, aes(x=Age,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
ggplot(data=mydata, aes(x=Age,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
ggplot(data=mydata, aes(x=age_num,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
mydata
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
mydata
ggplot(data=mydata, aes(x=age_num,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples in R") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=20, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
ggplot(data=mydata, aes(x=age_num,y=Value)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
ggtitle("Small Multiples") +
theme(plot.title = element_text(family="Trebuchet MS", face="bold", size=12, hjust=0, color="#555555")) +
theme(axis.text.x = element_text(angle=90))
barplot(height=mydata$Value, names=mydata$age_num)
as.numeric(factor(mydata$age_num))
barplot(height=mydata$Value, names=mydata$age_num)
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
mydata
barplot(height=mydata$Value, names=mydata$age_num)
as.numeric(factor(mydata$age_num))
barplot(height=mydata$Value, names=mydata$age_num)
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
barplot(height=mydata$Value, names=mydata$age_num)
mydata <- read.csv("~/R projects/cike/pop_sk3.csv", header = TRUE)
ggplot(mydata, aes(fill=age_num, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
theme(legend.position="none")
ggplot(mydata, aes(fill=age_num, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
theme(legend.position="right")
ggplot(mydata, aes(fill=Age, y=Value, x=Year)) +
geom_bar(position="stack", stat="identity") +
theme(legend.position="right")
